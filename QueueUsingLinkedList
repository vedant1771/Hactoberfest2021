#include <stdio.h>
#include <stdlib.h>

struct Node *f = NULL;
struct Node *r = NULL;

struct Node
{
    int data;
    struct Node *next;
};

void LinkedListTraversal(struct Node *ptr)
{
    while (ptr != NULL)
    {
        printf("Linked List Element: %d\n", ptr->data);
        ptr = ptr->next;
    }
}

void Enqueue(int val)
{
    struct Node *newNode = (struct Node *)malloc(sizeof(struct Node));
    if (newNode == NULL)
    {
        printf("Queue is Full\n");
    }
    else
    {
        newNode->data = val;
        newNode->next = NULL;
        if (f == NULL)
        {
            f = r = newNode;
        }
        else
        {
            r->next = newNode;
            r = newNode;
        }
    }
}

int Dequeue()
{
    int val = -1;
    struct Node *ptr = f;
    if (f == NULL)
    {
        printf("Queue is Empty\n");
    }
    else
    {
        f = f->next;
        val = ptr->data;
        free(ptr);
    }
    return val;
}

int main()
{
    printf("Dequeuing Element: %d\n", Dequeue());
    Enqueue(22);
    Enqueue(8);
    Enqueue(68);
    printf("Dequeuing Element: %d\n", Dequeue());
    printf("Dequeuing Element: %d\n", Dequeue());
    printf("Dequeuing Element: %d\n", Dequeue());
    LinkedListTraversal(f);

    return 0;
}
