#include<bits/stdc++.h>
using namespace std;

int unboundedk(vector<int>wt,vector<int>val,int W,int n)
{
   /* int t[W+1]={0};
    memset(t,0,sizeof t);

    for(int i=0;i<=W;i++)
       {
            for(int j=0;j<n;j++)
            {
                if(wt[j]<=i)
                t[i]=max(t[i],val[j]+t[i-wt[j]]);

            }
       }
       return t[W];
       */

       int t[n+1][W+1];

       for(int i=0;i<=n;i++)
       {
           for(int j=0;j<=W;j++)
            t[i][j]=0;
       }

       for(int i=1;i<=n;i++)
       {
           for(int j=1;j<=W;j++)
           {
               if(wt[i-1]>j)
                t[i][j]=t[i-1][j];
               else
                t[i][j]=max(t[i-1][j] , val[i-1]+t[i][j-wt[i-1]]);
           }
       }

       return t[n][W];

}
int main()
{
    vector<int> wt={5,10,15};
    vector<int> val={10,30,20};
    int W=100;
    int n=wt.size();

    cout<<unboundedk(wt,val,W,n);
}
